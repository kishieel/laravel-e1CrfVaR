version: '3.9'

services:
    laravel:
        build:
            context: "."
            dockerfile: "Dockerfile"
            target: "release"
            args:
                UID: "${DOCKER_UID:-1000}"
                GID: "${DOCKER_GID:-1000}"
        container_name: "laravel"
        restart: "unless-stopped"
        env_file:
            - ".env"
        depends_on:
            - "postgres"
        volumes:
            - "./:/apps"
            - "~/.composer/docker-cache:/home/apps/.composer:cached"
        networks:
            - "e1CrfVar.network"

    nginx:
        image: "nginx:alpine3.18"
        container_name: "nginx"
        ports:
            - "80:80"
        volumes:
            - "./:/apps"
            - "./.docker/nginx/conf.d:/etc/nginx/conf.d"
        depends_on:
            - "laravel"
        networks:
            - "e1CrfVar.network"

    postgres:
        image: "postgres:16.1-alpine3.19"
        container_name: "postgres"
        restart: "unless-stopped"
        ports:
            - "${DB_PORT:-5432}:5432"
        environment:
            POSTGRES_PASSWORD: "${DB_PASSWORD:-password}"
            POSTGRES_USER: "${DB_USERNAME:-postgres}"
            POSTGRES_DB: "${DB_DATABASE:-postgres}"
        healthcheck:
            test: [ "CMD-SHELL", "pg_isready", "-U", "${DB_USERNAME:-postgres}", "-d", "${DB_DATABASE:-postgres}" ]
            start_period: 5s
            interval: 10s
            timeout: 5s
            retries: 5
        volumes:
            - "e1CrfVar.postgres:/var/lib/postgresql/data"
        networks:
            - "e1CrfVar.network"

volumes:
    e1CrfVar.postgres: null

networks:
    e1CrfVar.network: null
